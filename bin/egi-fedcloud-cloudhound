#!/usr/bin/env ruby

# -------------------------------------------------------------------------- #
# Licensed under the Apache License, Version 2.0 (the "License"); you may    #
# not use this file except in compliance with the License. You may obtain    #
# a copy of the License at                                                   #
#                                                                            #
# http://www.apache.org/licenses/LICENSE-2.0                                 #
#                                                                            #
# Unless required by applicable law or agreed to in writing, software        #
# distributed under the License is distributed on an "AS IS" BASIS,          #
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.   #
# See the License for the specific language governing permissions and        #
# limitations under the License.                                             #
#--------------------------------------------------------------------------- #

require 'rubygems'

require 'thor'
require 'egi-fedcloud-cloudhound'

class EgiFedcloudCloudhound < Thor
  include Thor::Actions

  desc "all", "Prints information for all available cloud sites"
  method_option :credentials, :type => :string, :default => Egi::Fedcloud::Cloudhound::Settings.credentials,
                :aliases => '-c', :desc => 'PEM file with a personal certificate and private key'
  method_option :password, :type => :string, :default => nil,
                :aliases => '-p', :desc => 'PEM private key password'
  method_option :ca_path, :type => :string, :default => Egi::Fedcloud::Cloudhound::Settings.ca_path,
                :aliases => '-x', :desc => 'Directory path to all trusted CA certificates'
  method_option :gocdb_base_url, :type => :string, :default => Egi::Fedcloud::Cloudhound::Settings.gocdb_base_url,
                :aliases => '-g', :desc => 'GOCDB endpoint URL'
  method_option :appdb_base_url, :type => :string, :default => Egi::Fedcloud::Cloudhound::Settings.appdb_base_url,
                :aliases => '-a', :desc => 'AppDB API endpoint URL'
  method_option :debug, :type => :boolean, :default => Egi::Fedcloud::Cloudhound::Settings.debug,
                :aliases => '-d', :desc => 'Enable debugging'
  def all
    init_log options[:debug]

    $stdout.puts Egi::Fedcloud::Cloudhound::Formatter.as_table(
      Egi::Fedcloud::Cloudhound::Extractor.find_all(
        options
      )
    )
  end

  desc "ip IP_ADDRESS", "Prints information based on the provided IP address or IP address range"
  method_option :credentials, :type => :string, :default => Egi::Fedcloud::Cloudhound::Settings.credentials,
                :aliases => '-c', :desc => 'PEM file with a personal certificate and private key'
  method_option :password, :type => :string, :default => nil,
                :aliases => '-p', :desc => 'PEM private key password'
  method_option :ca_path, :type => :string, :default => Egi::Fedcloud::Cloudhound::Settings.ca_path,
                :aliases => '-x', :desc => 'Directory path to all trusted CA certificates'
  method_option :gocdb_base_url, :type => :string, :default => Egi::Fedcloud::Cloudhound::Settings.gocdb_base_url,
                :aliases => '-g', :desc => 'GOCDB endpoint URL'
  method_option :appdb_base_url, :type => :string, :default => Egi::Fedcloud::Cloudhound::Settings.appdb_base_url,
                :aliases => '-a', :desc => 'AppDB API endpoint URL'
  method_option :debug, :type => :boolean, :default => Egi::Fedcloud::Cloudhound::Settings.debug,
                :aliases => '-d', :desc => 'Enable debugging'
  def ip(ip_address)
    init_log options[:debug]

    $stdout.puts Egi::Fedcloud::Cloudhound::Formatter.as_table(
      Egi::Fedcloud::Cloudhound::Extractor.find_by_ip(
        ip_address,
        options
      )
    )
  end

  desc "appuri URI", "Prints information based on the provided Appliance MPURI"
  method_option :credentials, :type => :string, :default => Egi::Fedcloud::Cloudhound::Settings.credentials,
                :aliases => '-c', :desc => 'PEM file with a personal certificate and private key'
  method_option :password, :type => :string, :default => nil,
                :aliases => '-p', :desc => 'PEM private key password'
  method_option :ca_path, :type => :string, :default => Egi::Fedcloud::Cloudhound::Settings.ca_path,
                :aliases => '-x', :desc => 'Directory path to all trusted CA certificates'
  method_option :gocdb_base_url, :type => :string, :default => Egi::Fedcloud::Cloudhound::Settings.gocdb_base_url,
                :aliases => '-g', :desc => 'GOCDB endpoint URL'
  method_option :appdb_base_url, :type => :string, :default => Egi::Fedcloud::Cloudhound::Settings.appdb_base_url,
                :aliases => '-a', :desc => 'AppDB API endpoint URL'
  method_option :debug, :type => :boolean, :default => Egi::Fedcloud::Cloudhound::Settings.debug,
                :aliases => '-d', :desc => 'Enable debugging'
  def appuri(uri)
    init_log options[:debug]

    $stdout.puts Egi::Fedcloud::Cloudhound::Formatter.as_table(
      Egi::Fedcloud::Cloudhound::Extractor.find_by_appuri(
        uri,
        options
      )
    )
  end

  # Static method required by Thor to make certain
  # actions work.
  def self.source_root
    File.expand_path(File.join('..', '..', 'config'), __FILE__)
  end

  private

  # Initializes logging facilities.
  #
  # @param debug [Boolean] rudimentary logging level control
  # @return [Egi::Fedcloud::Cloudhound::Log] logger instance for additional configuration
  def init_log(debug = false)
    logger = Egi::Fedcloud::Cloudhound::Log.new(STDERR)
    logger.level = debug ? Egi::Fedcloud::Cloudhound::Log::DEBUG : Egi::Fedcloud::Cloudhound::Log::ERROR
    logger
  end
end

EgiFedcloudCloudhound.start
